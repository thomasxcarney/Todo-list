(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"* {\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: grid;\n    grid-template-columns: min-content 1fr;\n    grid-template-rows: min-content 1fr;\n    width: 100vw;\n    height: 100vh;\n}\n\n#header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    color: red;\n    background-color: aquamarine;\n    text-align: center;\n    padding: 20px;\n}\n\n#sidebar {\n    grid-column: 1;\n    grid-row: 2;\n    background-color: rgb(222, 186, 140);\n    padding: 20px;\n}\n\n#content {\n    grid-column: 2;\n    grid-row: 2;\n    background-color: green;\n    padding: 20px;\n}\n\n.to-do-item {\n    background-color: bisque;\n    padding: 10px;\n    margin-bottom: 20px;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    justify-items: center;\n    align-items: center;\n}\n\n.hidden {\n    overflow: hidden;\n    display: none;\n    visibility: hidden;\n}\n\n.category, \n#homeBtn {\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,sCAAsC;IACtC,mCAAmC;IACnC,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,4BAA4B;IAC5B,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,oCAAoC;IACpC,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,qCAAqC;IACrC,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;AACnB",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: grid;\n    grid-template-columns: min-content 1fr;\n    grid-template-rows: min-content 1fr;\n    width: 100vw;\n    height: 100vh;\n}\n\n#header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    color: red;\n    background-color: aquamarine;\n    text-align: center;\n    padding: 20px;\n}\n\n#sidebar {\n    grid-column: 1;\n    grid-row: 2;\n    background-color: rgb(222, 186, 140);\n    padding: 20px;\n}\n\n#content {\n    grid-column: 2;\n    grid-row: 2;\n    background-color: green;\n    padding: 20px;\n}\n\n.to-do-item {\n    background-color: bisque;\n    padding: 10px;\n    margin-bottom: 20px;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    justify-items: center;\n    align-items: center;\n}\n\n.hidden {\n    overflow: hidden;\n    display: none;\n    visibility: hidden;\n}\n\n.category, \n#homeBtn {\n    cursor: pointer;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);o&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),n.push(u))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],u=i[l]||0,s="".concat(l," ").concat(u);i[l]=u+1;var m=t(s),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)n[m].references++,n[m].updater(p);else{var A=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:s,updater:A,references:1})}a.push(s)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var d=o(e,r),l=0;l<i.length;l++){var u=t(i[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}i=d}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var o={};(()=>{t.d(o,{Xf:()=>M,H5:()=>H,Kn:()=>W});var e=t(379),n=t.n(e),r=t(795),i=t.n(r),a=t(569),c=t.n(a),d=t(565),l=t.n(d),u=t(216),s=t.n(u),m=t(589),p=t.n(m),A=t(426),g={};g.styleTagTransform=p(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=s(),n()(A.Z,g),A.Z&&A.Z.locals&&A.Z.locals;const f=[],y=(e,n,t,o,r)=>({title:e,description:n,dueDate:t,priority:o,category:r});function v(e){f.push(e)}v(y("Go to work","I have to go to work :(","2023-09-07T17:12","high priority","work"));const I=document.getElementById("NewTaskBtn"),h=document.getElementById("newTaskDialog");I.addEventListener("click",(()=>{h.showModal()}));const C=document.querySelectorAll("input");function B(){C.forEach((e=>e.value="")),document.getElementById("normal").checked=!0}const E=document.getElementById("submitNewTask"),b=document.getElementById("submitEditBtn");E.addEventListener("click",(e=>{e.preventDefault(),h.close();let n=document.querySelector('input[name="priority"]:checked').value,t=document.querySelector('input[name="titleInput"]').value,o=document.querySelector('input[name="desInput"]').value,r=document.querySelector('input[name="dueInput"]').value,i=document.querySelector('input[name="category"]').value,a=y(t,o,r,n,i);W(i),B(),h.close(),v(a),f.sort(((e,n)=>e.dueDate>n.dueDate?1:e.dueDate<n.dueDate?-1:0))}));const k=document.getElementById("closeNewTaskDialogBtn"),L=document.getElementById("closeEditDialogBtn"),w=document.getElementById("editDialog");function x(e,n){e.addEventListener("click",(e=>{e.preventDefault(),B(),n.close()}))}x(k,h),x(L,w);const T=document.getElementById("content");function M(){for(let e=0;e<f.length;e++)T.appendChild(D(f[e]))}function D(e){let n=document.createElement("div");n.classList.add("to-do-item");let t=document.createElement("h4");t.innerHTML=e.title;let o=document.createElement("p");o.innerHTML=e.dueDate;let r=document.createElement("p");r.innerHTML=e.priority;let i=document.createElement("button");i.innerHTML="Details",i.classList.add("expand");let a=document.createElement("div"),c=document.createElement("p");c.innerHTML=e.description;let d=document.createElement("p");d.innerHTML=e.category;let l=document.createElement("button");l.innerHTML="Remove item";let u=document.createElement("button");return u.innerHTML="Edit",a.append(c,d,l,u),a.classList.add("hidden"),n.append(t,i,o,r,a),function(e,n){e.addEventListener("click",(()=>{n.classList.contains("hidden")?n.classList.remove("hidden"):n.classList.add("hidden")}))}(i,a),function(e,n){e.addEventListener("click",(()=>{!function(e){let n=f.indexOf(e);f.splice(n,1),H(),M()}(n)}))}(l,e),function(e,n){e.addEventListener("click",(()=>{!function(e){const n=document.getElementById("editTitleInput"),t=document.getElementById("editDesInput"),o=document.getElementById("editDueInput"),r=document.getElementById("editLow"),i=document.getElementById("editNormal"),a=document.getElementById("editHigh");n.value=e.title,t.value=e.description,o.value=e.dueDate;const c=e.priority.toLowerCase();c==a.value?a.checked=!0:c==i.value?i.checked=!0:c==r.value&&(r.checked=!0)}(n),S.showModal()}))}(u,e),function(e){b.addEventListener("click",(n=>{n.preventDefault();let t=function(){let e,n=document.getElementById("editTitleInput").value,t=document.getElementById("editDesInput").value,o=document.getElementById("editDueInput").value,r=document.getElementById("editCategory").value;return 1==document.getElementById("editHigh").checked?e="High priority":1==document.getElementById("editNormal").checked?e="Normal priority":1==document.getElementById("editLow").checked&&(e="Low priority"),[n,t,o,e,r]}();!function(e,n){e.title=n[0],e.description=n[1],e.dueDate=n[2],e.priority=n[3],e.category=n[4]}(e,t),w.close(),H(),M()}))}(e),n}function H(){T.innerHTML=""}E.addEventListener("click",(()=>{H(),M()}));const S=document.getElementById("editDialog"),q=document.getElementsByClassName("category");function j(){for(let e=0;e<q.length;e++)q[e].addEventListener("click",(n=>{let t=q[e].classList[0];H(),N(t)}))}function N(e){for(let n=0;n<f.length;n++)f[n].category.toLowerCase()==e&&T.appendChild(D(f[n]))}document.getElementById("homeBtn").addEventListener("click",(e=>{H(),M()}));const O=document.getElementById("editCategory"),U=document.getElementById("category"),R=document.getElementById("sidebar");function W(e){0==Object.hasOwn(q,e)&&(function(e){O.innerHTML+=e,U.innerHTML+=e;let n=document.createElement("h4");n.innerHTML=e,n.classList.add(e),n.classList.add("category"),R.appendChild(n)}(e),j())}console.log(typeof q),j(),M()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,